if Gem.loaded_specs.key?('rspec-rails')
  RSpec.describe ApplicationController, type: :controller do
    render_views

    controller do
      around_action :test_arel_toolkit

      class IgnoreFirstEntry
        def self.call(arel, next_middleware)
          arel.query(class: Arel::Nodes::SelectStatement).each do |node|
            node.offset.replace(Arel::Nodes::Offset.new(1))
          end
          next_middleware.call(arel)
        end
      end

      def test_arel_toolkit(&block)
        Arel.middleware.apply([IgnoreFirstEntry]) do
          yield block
        end
      end

      def index
        render plain: User.all.map(&:username).to_json
      end
    end

    describe 'index' do
      it 'returns a sql generated by the arel toolkit' do
        User.create! username: 'Maarten'
        User.create! username: 'Willian'

        get :index

        expect(response.body).to eq ['Willian'].to_json
      end

      it 'has loaded the Railtie' do
        initializer_names = Rails.application.railties.map do |railtie|
          railtie.initializers.map do |initializer|
            initializer.name.to_s
          end
        end.flatten

        expect(initializer_names).to include('arel.middleware.insert')
      end
    end
  end
end
